<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>丁小样同学</title>
    <description></description>
    <link>http://blog.dinghz.com</link>
    <language>zh-CN</language>
    <copyright>Copyright 2015, blog.dinghz.com</copyright>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <generator>丁小样同学</generator>
    <atom:link href="http://blog.dinghz.com/rss.xml" rel="self" type="application/rss+xml" />

    
    <item>
      <title>Linux wget命令整站下载做网站镜像</title>
      <description>
        <![CDATA[
        <h3>普通下载</h3>

<p>简单的下载文件，类似浏览器的文件下载功能。</p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span>wget http://www.xxx.com/abc/file.zip
</code></pre></div>
<h3>断点续传</h3>

<p>文件大或网络慢不稳定的时候，文件还没下载完成，连接就断开又得重新下载。这个时候可以使用wget的断点续传，只需要在使用的时候加-c参数。</p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span>wget -c http://www.xxx.com/abc/file.zip
</code></pre></div>
<h3>批量下载</h3>

<p>有多个文件需要下载，那么你只要给wget一个下载清单即可批量下载。编写一个文件，文件的每一行都是需要下载的url地址，然后使用-i参数。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text"># download.txt
http://www.xxx.com/abc/file1.zip
http://www.xxx.com/abc/file2.zip
http://www.xxx.com/abc/file3.zip
</code></pre></div><div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span>wget -i download.txt
</code></pre></div>
<h3>选择性下载</h3>

<p>可以指定下载某种类型文件，或者不下载某种文件。</p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span>wget -m -reiect<span class="o">=</span>gif http://www.xxx.com/abc/

<span class="c"># -reject=gif 表示忽略gif文件</span>
<span class="c"># -accept=git 表示下载gif文件</span>
</code></pre></div>
<h3>整站下载</h3>

<p>可以以递归的方式下载整站，并将下载的页面的链接转换为本地链接，同时可以忽略robots.txt协议和模拟User-Agent。</p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span>wget -r -p -np -k -e <span class="nv">robots</span><span class="o">=</span>off -U <span class="s2">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:38.0) Gecko/20100101 Firefox/38.0&quot;</span> http://www.xxx.com/abc/

<span class="c"># -r,  --recursive（递归)</span>
<span class="c"># -k,  --convert-links（转换链接）</span>
<span class="c"># -p,  --page-requisites（页面必需元素）</span>
<span class="c"># -np, --no-parent（不追溯至父级）</span>
<span class="c"># -e robots=off, --忽略robots.txt协议</span>
<span class="c"># -U, 模拟User-Agent</span>
</code></pre></div>
        ]]>
      </description>
      <pubDate>2015-07-05T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2015/07/05/linuxwget.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2015/07/05/linuxwget</guid>
    </item>
    
    <item>
      <title>shell执行mysql的SQL语句</title>
      <description>
        <![CDATA[
        <h3>在脚本中执行mysql的SQL语句</h3>
<div class="highlight"><pre><code class="language-mysql" data-lang="mysql">    <span class="n">mysql</span> <span class="o">&lt;&lt;</span><span class="n">EOF</span>    
      <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">tableA</span> <span class="n">a</span><span class="p">,</span> <span class="n">tableB</span> <span class="n">b</span>   
      <span class="k">where</span> <span class="n">a</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">id</span><span class="p">;</span>  
    <span class="n">EOF</span> 
</code></pre></div>
        ]]>
      </description>
      <pubDate>2014-12-31T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2014/12/31/shellmysql.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2014/12/31/shellmysql</guid>
    </item>
    
    <item>
      <title>shell多行文字合并为一行</title>
      <description>
        <![CDATA[
        <h3>使用awk来进行处理换行问题</h3>
<div class="highlight"><pre><code class="language-sh" data-lang="sh">awk <span class="s1">&#39;{printf (/#/&amp;&amp;NR&gt;1)?&quot;\n&quot;$0:$0}&#39;</span>
</code></pre></div>
        ]]>
      </description>
      <pubDate>2014-12-31T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2014/12/31/shell.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2014/12/31/shell</guid>
    </item>
    
    <item>
      <title>mysqldump命令的用法</title>
      <description>
        <![CDATA[
        <h3>导出表结构不导出数据</h3>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span>mysqldump -d -uusername -hhostname -p dbname &gt; tables.sql
</code></pre></div>
<h3>导出表结构不导出数据</h3>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="n">$</span> <span class="n">mysqldump</span> <span class="o">-</span><span class="n">t</span> <span class="o">-</span><span class="n">uusername</span> <span class="o">-</span><span class="n">hhostname</span> <span class="o">-</span><span class="n">p</span> <span class="n">dbname</span> <span class="o">&gt;</span> <span class="n">datas</span><span class="o">.</span><span class="na">sql</span></code></pre></div>

        ]]>
      </description>
      <pubDate>2014-12-31T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2014/12/31/mysqldump.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2014/12/31/mysqldump</guid>
    </item>
    
    <item>
      <title>nginx平滑升级</title>
      <description>
        <![CDATA[
        <h3>重命名主进程文件</h3>

<p>旧版本 nginx 的主进程将重命名它的 pid 文件为 .oldbin(例如：/usr/local/nginx/logs/nginx.pid.oldbin) </p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span><span class="nb">kill</span> -USR2 【旧颁布的Nginx主进程号】  
</code></pre></div>
<h3>同时运行nginx</h3>

<p>新、旧版本的nginx 实例会同时运行，共同处理输入的请求。要逐步停止旧版本的 nginx 实例，你必须发送 WINCH 信号给旧的主进程，然后，它的工作进程就将开始从容关闭 </p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span><span class="nb">kill</span> -WINCH 【旧版本的Nginx主进程号】
</code></pre></div>
<h3>升级或恢复</h3>

<p>可以决定是使用新版本，还是恢复到旧版本 </p>
<div class="highlight"><pre><code class="language-sh" data-lang="sh"><span class="nv">$ </span><span class="nb">kill</span> 【新的主进程号或旧的主进程号】
</code></pre></div>
        ]]>
      </description>
      <pubDate>2014-11-19T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2014/11/19/nginxupdate.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2014/11/19/nginxupdate</guid>
    </item>
    
    <item>
      <title>Memcached分布式</title>
      <description>
        <![CDATA[
        <p>&nbsp;&nbsp;&nbsp;&nbsp;大多数小公司的Web服务器都只有一台，然后就部署了很多Web程序，完全没有什么负载均衡的概念。一但要做个升级，就得停服务，升级完成后，用户还得重新登录，这给用户是相当不好的体验。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;Web负载均衡，这首选肯定是Nginx了，这就不在这里多说了。而使用了负载均衡，那多个Web实例的用户会话怎么保持一致呢？这个时候Memcached就可以闪亮登场了（其实Memcached的不仅仅是用于用户会话缓存的），最近学习了Memcached，在自己边学习，边实验的过程当中，看了许多资料。这里就简单说一下Memcached，具体会给大家分享一些比较好的文章。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。介绍可以看官网，如果觉得英文看不大懂，那就看看<a href="http://baike.baidu.com/link?url=5s_KtQnwf9DohOzjy3rBtUpBMX21lLHE9ZjB6DibbAyXmyE2juRn5hCUt9cdTnoS">百度百科</a>的介绍，同时也有对Memcached做了全面剖析，详情请看<a href="http://blog.charlee.li/memcached-pdf/">memcached全面剖析--PDF总结篇</a>。 </p>

<blockquote>
<p>memcached全面剖析的连载已经结束，翻译工作也已经全部完成了。</p>

<p>为了方便阅读，现将原来的翻译结果打包成PDF文档。可在本文末尾处下载。</p>

<p>原来的各篇翻译的地址如下：</p>

<p>第1章：</p>

<p>第2章：<a href="http://tech.idv2.com/2008/07/11/memcached-002/">http://tech.idv2.com/2008/07/11/memcached-002/</a></p>

<p>第3章：<a href="http://tech.idv2.com/2008/07/16/memcached-003/">http://tech.idv2.com/2008/07/16/memcached-003/</a></p>

<p>第4章：<a href="http://tech.idv2.com/2008/07/24/memcached-004/">http://tech.idv2.com/2008/07/24/memcached-004/</a></p>

<p>第5章：<a href="http://tech.idv2.com/2008/07/31/memcached-005/">http://tech.idv2.com/2008/07/31/memcached-005/</a> </p>
</blockquote>

<p>&nbsp;&nbsp;&nbsp;&nbsp;Memcached是需要安装的，具体的安装就不在这里将来，安装方面可以看官网的介绍或<a href="http://www.cnblogs.com/czh-liyu/archive/2010/04/27/1722084.html">这篇文章</a>。那有了服务器端，那其客户端支持什么语言呢？有C / C++、PHP、Java、Python等等，基本的语言都支持，对于客户端的介绍和下载，请看<a href="http://code.google.com/p/memcached/wiki/Clients">Clients</a>。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;那至于怎么跟Tomcat进行结合呢？需要用到哪些包呢？请看<a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration">memcached-session-manager</a>，这篇文章写的非常详细，不过就是全英文的。想看中文的翻译版的，那请看这篇文章<a href="http://chenzhou123520.iteye.com/blog/1650212">memcached-session-manager中文翻译</a></p>

<blockquote>
<p><a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Introduction">Introduction</a></p>

<p><a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Decide_which_serialization_strategy_to_use">Decide which serialization strategy to use</a></p>

<p><a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Configure_tomcat">Configure tomcat</a></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Add_memcached-session-manager_jars_to_tomcat">Add memcached-session-manager jars to tomcat</a></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Add_custom_serializers_to_your_webapp_(optional)">Add custom serializers to your webapp (optional)</a></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Configure_memcached-session-manager_as_%3CContext%3E_Manager">Configure memcached-session-manager as <Context> Manager</a></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Overview_over_memcached-session-manager_configuration_attributes">Overview over memcached-session-manager configuration attributes</a></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Overview_over_available_system_properties_(all_optional)">Overview over available system properties (all optional)</a></p>

<p><a href="http://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration#Configure_logging">Configure logging</a></p>
</blockquote>

        ]]>
      </description>
      <pubDate>2014-04-08T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2014/04/08/memcached.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2014/04/08/memcached</guid>
    </item>
    
    <item>
      <title>HTML5 Canvas 的初试</title>
      <description>
        <![CDATA[
        <h3>Canvas的简单实习</h3>

<p>HTML5 真的很强大，目前大多数的浏览器都支持了，就差IE了，前两个星期开始了解Canvas，真的很好很强大，HTML5在WEB开发方面真的是越来越快速了和方便了。 </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;html&gt;</span>  
 <span class="nt">&lt;head&gt;</span>  
  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;application/x-javascript&quot;</span><span class="nt">&gt;</span>  
    <span class="kd">function</span> <span class="nx">draw</span><span class="p">()</span> <span class="p">{</span>  
      <span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span>  
      <span class="k">if</span> <span class="p">(</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">)</span> <span class="p">{</span>  
        <span class="kd">var</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span>  

        <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span> <span class="o">=</span> <span class="s2">&quot;rgb(200,0,0)&quot;</span><span class="p">;</span>  
        <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span> <span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>  

        <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span> <span class="o">=</span> <span class="s2">&quot;rgba(0, 0, 200, 0.5)&quot;</span><span class="p">;</span>  
        <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span> <span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>  
      <span class="p">}</span>  
    <span class="p">}</span>  
  <span class="nt">&lt;/script&gt;</span>  
 <span class="nt">&lt;/head&gt;</span>  
 <span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;draw();&quot;</span><span class="nt">&gt;</span>  
   <span class="nt">&lt;canvas</span> <span class="na">id=</span><span class="s">&quot;canvas&quot;</span> <span class="na">width=</span><span class="s">&quot;150&quot;</span> <span class="na">height=</span><span class="s">&quot;150&quot;</span><span class="nt">&gt;&lt;/canvas&gt;</span>  
 <span class="nt">&lt;/body&gt;</span>  
<span class="nt">&lt;/html&gt;</span>
</code></pre></div>
<p>效果图如下:</p>

<p><img src="https://developer.mozilla.org/@api/deki/files/602/=Canvas_ex1.png" alt="canvas效果"></p>

<p>简单的几行代码就可以实现在界面画两个矩形，还支持透明；突然就想起弄个Demo来练练手，于是就自己用GWT做了一个简单的画图页面，<a href="http://canvasdemo.appspot.com/">展示地址(国内可能打不开)</a>，有兴趣的朋友可以看看，本来想做多几个功能的，可没什么时间做，所有等以后有时间再慢慢完善。 
界面如下图：</p>

<p><img src="http://dl.iteye.com/upload/attachment/236815/ec876b1d-14f9-32a8-8c52-b3472b89d377.gif" alt="canvas效果"></p>

        ]]>
      </description>
      <pubDate>2010-04-19T00:00:00+08:00</pubDate>
      <link>http://blog.dinghz.com/2010/04/19/canvasdemo.html</link>
      <guid isPermaLink="false">http://blog.dinghz.com/2010/04/19/canvasdemo</guid>
    </item>
    
  </channel>
</rss>

